// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SnookerTrainingCore.Infra.Contexto;

namespace SnookerTrainingCore.Infra.Migrations
{
    [DbContext(typeof(SnookerContexto))]
    [Migration("20201203234900_RecriacaoDoBanco")]
    partial class RecriacaoDoBanco
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(300);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Pontuacao", b =>
                {
                    b.Property<int>("IdPontuacao")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdRotina");

                    b.Property<bool>("MatouTodasAsBolas");

                    b.Property<double>("Pontos");

                    b.HasKey("IdPontuacao");

                    b.HasIndex("IdRotina");

                    b.ToTable("Pontuacoes");
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Resultado", b =>
                {
                    b.Property<int>("IdResultado")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<string>("Observacao");

                    b.HasKey("IdResultado");

                    b.ToTable("Resultados");
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Rotina", b =>
                {
                    b.Property<int>("IdRotina")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan?>("Duracao");

                    b.Property<DateTime?>("HoraFim");

                    b.Property<DateTime?>("HoraInicio");

                    b.Property<int>("IdRotinaTemplate");

                    b.Property<int>("IdTreino");

                    b.Property<string>("Observacao");

                    b.HasKey("IdRotina");

                    b.HasIndex("IdRotinaTemplate");

                    b.HasIndex("IdTreino");

                    b.ToTable("Rotinas");
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Templates.RotinaTemplate", b =>
                {
                    b.Property<int>("IdRotina")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(200);

                    b.Property<int>("IdCategoria");

                    b.Property<string>("Imagem");

                    b.Property<double?>("Meta");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("TipoMeta");

                    b.Property<int?>("TreinoTemplateIdTreino");

                    b.HasKey("IdRotina");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("TreinoTemplateIdTreino");

                    b.ToTable("RotinasTemplate");
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Templates.TreinoTemplate", b =>
                {
                    b.Property<int>("IdTreino")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("IdTreino");

                    b.ToTable("TreinosTemplate");
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Treino", b =>
                {
                    b.Property<int>("IdTreino")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Data");

                    b.Property<TimeSpan?>("Duracao");

                    b.Property<DateTime?>("HoraFim");

                    b.Property<DateTime?>("HoraInicio");

                    b.Property<int>("IdTreinoTemplate");

                    b.Property<string>("Observacao");

                    b.HasKey("IdTreino");

                    b.HasIndex("IdTreinoTemplate");

                    b.ToTable("Treinos");
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Pontuacao", b =>
                {
                    b.HasOne("SnookerTrainingCore.Domain.Entidades.Rotina", "Rotina")
                        .WithMany("Pontos")
                        .HasForeignKey("IdRotina")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Rotina", b =>
                {
                    b.HasOne("SnookerTrainingCore.Domain.Entidades.Templates.RotinaTemplate", "RotinaTemplate")
                        .WithMany("Rotinas")
                        .HasForeignKey("IdRotinaTemplate")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SnookerTrainingCore.Domain.Entidades.Treino", "Treino")
                        .WithMany("Rotinas")
                        .HasForeignKey("IdTreino")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Templates.RotinaTemplate", b =>
                {
                    b.HasOne("SnookerTrainingCore.Domain.Entidades.Categoria", "Categoria")
                        .WithMany("RotinasTemplate")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SnookerTrainingCore.Domain.Entidades.Templates.TreinoTemplate")
                        .WithMany("RotinasTemplate")
                        .HasForeignKey("TreinoTemplateIdTreino");
                });

            modelBuilder.Entity("SnookerTrainingCore.Domain.Entidades.Treino", b =>
                {
                    b.HasOne("SnookerTrainingCore.Domain.Entidades.Templates.TreinoTemplate", "TreinoTemplate")
                        .WithMany("Treinos")
                        .HasForeignKey("IdTreinoTemplate")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
